{
    "openapi": "3.0.2",
    "info": {
        "title": "User Management",
        "description": "List of API's for managing users",
        "version": "1.0.0"
    },
    "paths": {
        "/v1/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Read Users",
                "operationId": "read_users_v1_users_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Email",
                            "type": "string",
                            "format": "email"
                        },
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Skip",
                            "type": "integer",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "User Ids",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "name": "user_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create User",
                "operationId": "create_user_v1_users_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBase"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{user_id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Read User By Id",
                "description": "Get a specific user by id.",
                "operationId": "read_user_by_id_v1_users__user_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "User Id",
                            "type": "string"
                        },
                        "name": "user_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBase"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "title": "Address",
                "required": [
                    "addressLine1",
                    "city",
                    "country"
                ],
                "type": "object",
                "properties": {
                    "addressLine1": {
                        "title": "Addressline1",
                        "type": "string"
                    },
                    "addressLine2": {
                        "title": "Addressline2",
                        "type": "string"
                    },
                    "city": {
                        "title": "City",
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "type": "string"
                    }
                }
            },
            "CreateUserRequest": {
                "title": "CreateUserRequest",
                "required": [
                    "createdBy",
                    "createdOn",
                    "dateOfBirth",
                    "email",
                    "firstName",
                    "gender",
                    "id",
                    "lastName",
                    "modifiedBy",
                    "modifiedOn",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "createdBy": {
                        "title": "Createdby",
                        "type": "string"
                    },
                    "createdOn": {
                        "title": "Createdon",
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateOfBirth": {
                        "title": "Dateofbirth",
                        "type": "string",
                        "format": "date"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "firstName": {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "lastName": {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "title": "Modifiedby",
                        "type": "string"
                    },
                    "modifiedOn": {
                        "title": "Modifiedon",
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    }
                }
            },
            "Gender": {
                "title": "Gender",
                "enum": [
                    "MALE",
                    "FEMALE",
                    "OTHER"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "GetUserResponse": {
                "title": "GetUserResponse",
                "required": [
                    "users"
                ],
                "type": "object",
                "properties": {
                    "users": {
                        "title": "Users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBase"
                        }
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "UserBase": {
                "title": "UserBase",
                "required": [
                    "createdBy",
                    "createdOn",
                    "dateOfBirth",
                    "email",
                    "firstName",
                    "gender",
                    "id",
                    "lastName",
                    "modifiedBy",
                    "modifiedOn",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "createdBy": {
                        "title": "Createdby",
                        "type": "string"
                    },
                    "createdOn": {
                        "title": "Createdon",
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateOfBirth": {
                        "title": "Dateofbirth",
                        "type": "string",
                        "format": "date"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "firstName": {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "lastName": {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "title": "Modifiedby",
                        "type": "string"
                    },
                    "modifiedOn": {
                        "title": "Modifiedon",
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    }
                }
            },
            "UserStatus": {
                "title": "UserStatus",
                "enum": [
                    "ACTIVE",
                    "INACTIVE"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            }
        }
    }
}